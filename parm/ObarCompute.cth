/**********************************************************************
 * TDRP params for ParamsMainObsSubset
 **********************************************************************/

//======================================================================
//
// Main Params.
//
// --------Debug file -----------------------------------------
// --------PMU setting ----------------------------------------
// --------Triggering settings --------------------------------.
//
//======================================================================
 
///////////// debug_file //////////////////////////////
//
// debug file.
//
// File with debug settings.
//
//
// Type: string
//

debug_file = "debug.params";

///////////// instance ////////////////////////////////
//
// Process instance.
//
// Used for registration with procmap.
//
//
// Type: string
//

instance = "cth";

///////////// procmap_interval_minutes ////////////////
//
// Pmu max minutes before restart.
//
// Used for registration with procmap.
//
//
// Type: double
//

procmap_interval_minutes = 5;

//======================================================================
//
// Triggering.
//
// Triggering is for obs data having a known gen time frequency. The 
//   triggering will be for this full set of gen times unless the subset 
//   param below is activated.
// Triggering assumes REALTIME inputs unless the command line has args:
//        -interval yyyymmddhhmmss yyyymmddhhmmss
// in which case ARCHIVE mode triggering is assumed for existing data in 
//   the range specified.
//
//======================================================================
 
///////////// trigger_url /////////////////////////////
//
// Triggering URL.
//
//
// Type: string
//

trigger_url = "mdvp:://localhost::EpochOps/mdv/satellite/globcomp_0.1_2020_CTH_3hr_0p5";

///////////// trigger_gen_minutes_subset //////////////
//
// trigger frequency subset.
//
// Subset of gen time minutes for which to trigger results, empty to 
//   trigger all gen times that come in at the url. Must be a subset of 
//   the full set of triggering minutes. This won't work for data that is 
//   irregularly time spaced and should be kept empty.
//
//
// Type: int
// 1D array - variable length.
//

trigger_gen_minutes_subset = {
};

//======================================================================
//
// End of Main Params.
//
//======================================================================
 
/**********************************************************************
 * TDRP params for ParamsObsIn
 **********************************************************************/

//======================================================================
//
// Fcst Params.
//
// --------data values for input and output--------------------
// --------projection file specification ----------------------.
//
//======================================================================
 
//======================================================================
//
// description of params.
//
// Inputs/outputs share the same parameters:
// name = simple name for this data
// description = description of how its used in the app
// url = where data comes from or is written
// field = field name
// units = data units
// remap = TRUE if grid should be remapped to the ConvWx projection for 
//   read
// delta_minutes = minutes between obs data.
//
//======================================================================
 
///////////// obs_input ///////////////////////////////
//
// input obs data.
//
// observation data input.
//
//
// Type: struct
//   typedef struct {
//      string name;
//      string description;
//      string url;
//      string field;
//      string units;
//      boolean remap;
//      int delta_minutes;
//   }
//
// 1D array - variable length.
//

obs_input = {
  {
    name = "obs input",
    description = "cloud height",
    url = "mdvp:://localhost::EpochOps/mdv/satellite/globcomp_0.1_2020_CTH_3hr_0p5",
    field = "CloudHeight",
    units = "ft",
    remap = TRUE,
    delta_minutes = 180
  }
};

///////////// projection_param_file ///////////////////
//
// projection params.
//
// params with projection information.
//
//
// Type: string
//

projection_param_file = "projection_0.5deg.params";

//======================================================================
//
// End of Fcst Params.
//
//======================================================================
 
/**********************************************************************
 * TDRP params for Params
 **********************************************************************/

//======================================================================
//
// ObarCompute.
//
//======================================================================
 
//======================================================================
//
// Reads in obs data.
//
//======================================================================
 
///////////// tiling_param_file ///////////////////////
//
// File with tiling paramters.
//
//
// Type: string
//

#small tiles
tiling_param_file = "Tiling_20deg_10overlap_0.5deg.params";


///////////// obar_spdb ///////////////////////////////
//
// SPDB in which to store tile based obar.
//
//
// Type: string
//

obar_spdb = "spdbp:://localhost::$(OBAR_CTH)";

///////////// input_field /////////////////////////////
//
// Input field name, goes into SPDB.
//
//
// Type: string
//

input_field = "CloudHeight";

///////////// obs_threshold ///////////////////////////
//
// Threshold for mean obs input data value.
//
//
// Type: double
// 1D array - variable length.
//

obs_threshold = {
 30000, 35000, 40000
};

